# Preprocessing tasks (evaluate_inputs, evaluate_focus_areas, compile_user_profile)
# have been migrated to regular Python functions in utils/preprocessing.py

rank_ingredients_rag:
  description: >
    IMPORTANT: You have access to the user_profile data from kickoff inputs.
    
    STEP 1: Call the rank_ingredients_rag tool with this EXACT parameter:
    - user_profile: {user_profile}
    Iw will contain these keys:
    - patient_data (demographics, medical history, lifestyle)
    - flagged_biomarkers (from preprocessing)
    - summary (biomarker analysis summary)
    STEP 2: The tool will perform hybrid search (semantic + keyword + biomarker boosting)
    and return the top 15 most relevant ingredients.
    
    DO NOT modify or parse the user_profile. Pass it directly to the tool as-is.

    
  expected_output: >
    A JSON response with ranked ingredients including:
    - ingredient_name
    - description
    - semantic_score
    - bm25_score
    - biomarker_boost (if applicable)
    - final_score
    - rank
    Top 15 most relevant ingredients ranked by hybrid search and biomarker relevance.
  agent: ingredient_ranker_rag

discover_ingredients_web:
  description: >
    IMPORTANT: You have access to the user_profile data from kickoff inputs.
    
    STEP 1: Call the web_ingredient_discovery tool with this EXACT parameter:
    - user_profile: {user_profile}

    STEP 2: The tool will receive the user profile from kickoff inputs containing these keys:
    - patient_data (demographics, medical history, lifestyle)
    - flagged_biomarkers (from preprocessing)
    - summary (biomarker analysis summary)

    Discover new and trending supplement ingredients from credible scientific sources like PubMed,
    NIH, Examine.com, and other authoritative health databases. Use the web_ingredient_discovery tool
    to search for evidence-based ingredients that address the user's specific health conditions
    and flagged biomarkers.
  expected_output: >
    A JSON response with two sections:
    1. ingredient_list: Simple list with rank, ingredient_name, relevance_score, and source
    2. detailed_ingredients: Full details including description, biomarker_relevance, condition_relevance, discovery_query
    Top 15 most relevant ingredients discovered from credible scientific sources using LLM-based extraction from PubMed, NIH, Examine.com, and other authoritative sources.
  agent: web_ingredient_discovery




# Final task for supplement recommendations
generate_supplement_recommendations:
  description: >
    You are a board-certified physician and clinical nutritionist with 20+ years of experience in personalized medicine and supplement protocols.
    Call the generate_supplement_recommendations tool with these EXACT parameters:
    - user_profile: {user_profile}
    - rag_ingredients: <output from rank_ingredients_rag task>
    - web_ingredients: <output from discover_ingredients_web task>
    Use the generate_supplement_recommendations tool to get structured patient data, then perform final medical analysis to create the ultimate personalized supplement recommendations.
    
    CRITICAL: Your output must be ONLY the JSON response. Do not include any reasoning, analysis, or explanatory text. Do not show your thought process. Output ONLY the final JSON structure.
    
    The tool will provide{user_profile}:
    - patient_summary (demographics, medical conditions, flagged biomarkers, health issues)
    - ingredient_data (RAG-ranked ingredients and web-discovered ingredients)
    - analysis_instructions (detailed requirements for medical analysis)
    
    MEDICAL ANALYSIS PROCESS:
    1. Review the patient's specific biomarkers and their clinical significance (high/low values)
    2. Consider their medical conditions and symptom burden
    3. Evaluate pain and skin health issues that need addressing
    4. Assess the quality and relevance of both RAG database and web literature recommendations
    5. Consider potential interactions and contraindications
    6. Prioritize ingredients with the strongest evidence for this specific patient profile
    7. Ensure the protocol addresses the most critical health needs first
    
    CLINICAL DECISION MAKING:
    - Prioritize ingredients that directly address flagged biomarkers
    - Consider ingredients that support the patient's specific medical conditions
    - Include ingredients that address pain and skin health issues
    - Balance evidence quality from both RAG database and current literature
    - Ensure safety and avoid potential interactions
    - Limit to the most clinically relevant recommendations
    - If a patient is already taking a supplement, do not recommend it again or only recommend when you feel the dosage or frequency needs changes.
    
    For each ingredient, provide a concise "why" explanation (1-2 lines maximum) that:
    - References the patient's specific flagged biomarkers and their status (high/low)
    - Connects to their medical conditions and symptoms
    - Addresses their pain and skin health issues
    - Explains the clinical benefit for this particular patient
    - Shows evidence from either RAG database or web literature sources
    
    Return 8-10 final recommendations ranked by clinical priority for this specific patient.
    Focus on ingredients that will have the greatest positive impact on their health outcomes.
    
    
  expected_output: >
    ONLY the JSON response with final supplement recommendations. No explanatory text, reasoning, or analysis.
     Just the pure JSON structure with proper Pydantic validation. Each recommendation must include:
      ingredient_name, rank (1-10), and why (concise 1-2 line explanation).
      Follow the exact Pydantic model structure for validation.
      OUTPUT FORMAT - RETURN ONLY THIS JSON STRUCTURE:
    {
      "final_recommendations": [
        {
          "ingredient_name": "Exact ingredient name",
          "rank": 1,
          "why": "Concise 1-2 line explanation of why this ingredient is necessary for this specific patient"
        }
      ]
    }
  agent: supplement_recommender

# Final task for complete supplement protocol compilation
compile_final_supplement_recommendations:
  description: >
    You are a clinical pharmacist and supplement protocol specialist. Take the supplement recommendations 
    from the medical specialist and focus areas from the focus area generator to create complete supplement 
    protocols with dosages, frequencies, and focus area associations.
    IMPORTANT: You have access to focus_areas from kickoff inputs AND supplement recommendations from previous task.
    
    STEP 1: Call the compile_final_supplement_recommendations tool with these EXACT parameters:
    - supplement_recommendations: <output from generate_supplement_recommendations task>
    - focus_areas: {focus_areas}

    CRITICAL: Your output must be ONLY the JSON response. Do not include any reasoning, analysis, or explanatory text outside of the json file. Do not show your thought process. Output ONLY the final JSON structure.
    
    Use the compile_final_supplement_recommendations tool to get structured data, then create the final 
    implementable supplement protocol with proper Pydantic validation.
    
    The tool will provide:
    - supplement_recommendations (from Agent 6 - Medical Supplement Recommendation Specialist)
    - focus_areas {focus_areas}
    - compilation instructions and focus area mappings
    
    For each supplement recommendation, provide:
    1. ingredient_name: Exact ingredient name
    2. recommended_dosage: Clinical dosage with proper units (mg, mcg, IU, CFU, etc.)
    3. frequency: Optimal timing and frequency (e.g., "500mg twice daily with meals")
    4. focus_area: List of 1-2 most relevant focus area codes (e.g., ["CM", "MITO"])
    5. why: Keep the original patient-specific reasoning
    
    DOSAGE GUIDELINES:
    - Use evidence-based clinical dosages
    - Consider safety and tolerability
    - Include appropriate units and specify timing
    - Follow clinical best practices for each ingredient
    
    FOCUS AREA CODES:
    - CM: Cardiometabolic & Metabolic Health
    - COG: Cognitive & Mental Health
    - DTX: Detoxification & Biotransformation
    - IMM: Immune Function & Inflammation
    - MITO: Mitochondrial & Energy Metabolism
    - SKN: Skin & Barrier Function
    - STR: Stress-Axis & Nervous System Resilience
    - HRM: Hormonal Health (Transport)
    - GA: Gut Health and assimilation
    
    
  expected_output: >
    ONLY the JSON response with complete recommendations list. No explanatory text, reasoning, or analysis. 
    Just the pure JSON structure with proper Pydantic validation. Each recommendation must include: ingredient_name, 
    recommended_dosage, frequency, focus_area (list of codes), and why. Follow the exact Pydantic model structure for validation.
    OUTPUT FORMAT - RETURN ONLY THIS JSON STRUCTURE:
    {
      "supplement_recommendations": [
        {
          "ingredient_name": "Exact ingredient name",
          "recommended_dosage": "Clinical dosage with units",
          "frequency": "Optimal timing and frequency",
          "focus_area": ["CODE1", "CODE2"],
          "why": "Patient-specific reasoning"
        }
      ]
    }
  agent: final_supplement_compiler


